# AI Voice Bot & AI Structured Data Extraction

A real-time voice conversation bot built with Pipecat that can handle phone calls via Daily. 

The bot uses Deepgram for STT (possibly unimplemented), Claude for conversation intelligence and ElevenLabs for voice synthesis.

## 📁 Project Structure
```
├── README
└── services
    ├── analysis                        ## AI Analysis Microservice
    │   └── cmd
    │       └── main.go                 ## Main Go API server & Routine manager
    └── call                            ## Voice Agent Microservice
        ├── requirements.txt
        ├── src
        │   ├── bot.py                  ## Voice agent subprocess
        │   ├── prompt.py               ## Prompt details and generation function
        │   ├── runner.py               ## Configuration for each voice agent
        │   └── server.py               ## Python API server
        └── venv
            └── bin
                ├── activate            ## Run this to activate the python vEnv
                └── ...

```

## 🐳 Docker Configuration for Analysis Microservice

### Prerequisites
- Docker installed on your machine
- `.env` file with the following variables:
  ```
  SUPABASE_KEY=your_supabase_key
  SUPABASE_URL=your_supabase_url
  ANTHROPIC_API_KEY=your_anthropic_api_key
  ```

### Building and Running
1. Build the Docker image:
   ```bash
   docker build -t go-server .
   ```

2. Run the container:
   ```bash
   docker run -d \
     -p 8500:3000 \
     --env-file ./.env \
     --name go-server \
     go-server
   ```

### Utility Commands
Check if the container is running:
```bash
docker ps
```

View container logs:
```bash
docker logs go-server
```

Stop the container:
```bash
docker stop go-server
```

Remove the container:
```bash
docker rm go-server
```

### Environment Variables
The service requires the following environment variables:
- `SUPABASE_KEY`: Your Supabase API key
- `SUPABASE_URL`: Your Supabase project URL
- `ANTHROPIC_API_KEY`: Your Anthropic API key

These should be provided via a `.env` file in the project root directory.

### Ports
- External Port: 8500
- Internal Port: 3000

The service is configured to listen on port 3000 internally and is mapped to port 8500 on your host machine.



## 📄 License

# License

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

## Copyright

Copyright [2024] David Botos

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

## Third Party Components

This software includes the following third-party components:
[List any third-party components here with their respective licenses]

## NOTICE

BearHug ʕ•ᴥ•ʔ
Copyright [2024] David Botos